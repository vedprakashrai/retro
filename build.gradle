/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * User Manual available at https://docs.gradle.org/5.5/userguide/java_library_plugin.html
 */
 
 buildscript {
  //ext.kotlin_version = '1.3.10'
  ext.spring_boot_version = '2.1.6.RELEASE'
  //ext.tomcat_version = '9.0.22'
  repositories {
    mavenCentral()
  }
  dependencies {
   // classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
   // classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlin_version"
    classpath "org.springframework.boot:spring-boot-gradle-plugin:$spring_boot_version"
    //classpath 'com.bmuschko:gradle-tomcat-plugin:2.5'
  }
}

plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'
    id 'eclipse'
    id 'war'
    id 'com.gradle.build-scan' version '2.1'
    id 'org.springframework.boot' version '2.1.6.RELEASE'
  	id 'io.spring.dependency-management' version '1.0.7.RELEASE'
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
     mavenCentral()
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'
	//implementation 'org.springframework.boot:spring-boot-dependencies:2.1.6.RELEASE'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:27.1-jre'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
    
   // compile "org.springframework.boot:spring-boot-starter-web"
  	//compile "org.springframework.boot:spring-boot-starter-data-jpa"
  	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
  	//heroku
  	 compile 'com.github.jsimone:webapp-runner:8.5.11.3'
}
task stage() {
    dependsOn build,war//,clean
}

war.mustRunAfter clean

task copyToLib(type: Copy) {
	println("copy libs web runner")
    into "$buildDir/server"
    from(configurations.compile) {
        include "webapp-runner*"
    }
}

stage.dependsOn(copyToLib)
war {
    baseName = 'gradlejava'
    version = '0.0.1'
}
